@using Nop.Web.Framework.UI
@{
    Layout = "";
    var url = this.Context.Request.QueryString["returnUrl"];
    var m =10;
}

<div class="facebook-accountkit-login-block">
    <div class="inputs">
        <label for="country_code">Enter country code (e.g. +1):</label>
        <input id="country_code" name="country_code" type="text" value="">
      
    </div>
    <div class="inputs">
       
        <label for="phone_num">Enter phone number without spaces (e.g. 444555666):</label>
        <input id="phone_num" name="phone_num" type="text" value="">
    </div>
    <input type="button" class="button-1" onclick="phone_btn_onclick();" value="Login via SMS" />

    <div class="inputs" style="padding-top: 50px;">
        <label for="email">Enter email address:</label>
        <input autofocus="autofocus" class="email" data-val="true"
               data-val-email="Wrong email"
               data-val-required="Please enter your email" 
               id="email" name="email" type="text" value="">
        <span class="field-validation-valid" data-valmsg-for="Email" data-valmsg-replace="true"></span>
    </div>

    <input type="button" class="button-1" onclick="email_btn_onclick();" value="Login via Email"/>
   @using (Html.BeginForm("PublicInfo", "ExternalAuthFacebookAccountKit",new {returnUrl= url }, FormMethod.Post,new { id = "account_kit_form" })){
       <input type = "hidden" value = "" id = "csrf_nonce"  name = "csrf_nonce" />
       <input type = "hidden" value = "" id = "Code" name="Code" />
                }
    @*<form id="account_kit_form" action="">
       
    </form>*@
</div>
<script src="https://sdk.accountkit.com/en_US/sdk.js"></script>

<script>
    @functions{
        public string TokenHeaderValue()
        {
            string cookieToken, formToken;
            AntiForgery.GetTokens(null, out cookieToken, out formToken);
            return cookieToken + ":" + formToken;
        }
    }

    // initialize Account Kit with CSRF protection
    AccountKit_OnInteractive = function(){
        AccountKit.init(
            {
                appId: 1690029441247631,
                state: '@TokenHeaderValue()',
                version:"v1.0"
            }
        );
    };

    // login callback
    function loginCallback(response) {
        console.log(response);
        if (response.status === "PARTIALLY_AUTHENTICATED") {
            document.getElementById("Code").value = response.code;
            document.getElementById("csrf_nonce").value = response.state;
            document.getElementById("account_kit_form").submit();
        }
        else if (response.status === "NOT_AUTHENTICATED") {
            // handle authentication failure
        }
        else if (response.status === "BAD_PARAMS") {
            // handle bad parameters
        }
    }

    // phone form submission handler
    function phone_btn_onclick() {
        var country_code = document.getElementById("country_code").value;
        var ph_num = document.getElementById("phone_num").value;
        AccountKit.login('PHONE',
            {countryCode: country_code, phoneNumber: ph_num}, // will use default values if this is not specified
            loginCallback);
    }


    // email form submission handler
    function email_btn_onclick() {
        var email_address = document.getElementById("email").value;

        AccountKit.login('EMAIL', {emailAddress: email_address}, loginCallback);
    }

</script>